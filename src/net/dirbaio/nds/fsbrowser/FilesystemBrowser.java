/*
 * Copyright (C) 2013 dirbaio
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.dirbaio.nds.fsbrowser;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import net.dirbaio.nds.fs.Directory;
import net.dirbaio.nds.fs.File;
import net.dirbaio.nds.fs.Filesystem;
import net.dirbaio.nds.fsbrowser.actions.FileAction;
import net.dirbaio.nds.util.FileType;

public class FilesystemBrowser extends javax.swing.JPanel
{

    Filesystem fs;

    public FilesystemBrowser(Filesystem fs)
    {
        initComponents();

        this.fs = fs;
        DefaultMutableTreeNode root = makeTree(fs.mainDir);
        fsTree.setModel(new DefaultTreeModel(root));
    }

    private DefaultMutableTreeNode makeTree(Directory d)
    {
        DefaultMutableTreeNode t = new DefaultMutableTreeNode(d);

        for (Directory d2 : d.childrenDirs)
            t.add(makeTree(d2));

        for (File f : d.childrenFiles)
            t.add(makeTree(f));

        return t;
    }

    private DefaultMutableTreeNode makeTree(File f)
    {
        DefaultMutableTreeNode t = new DefaultMutableTreeNode(f);
        return t;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        optionsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fsTree = new javax.swing.JTree();

        setPreferredSize(new java.awt.Dimension(500, 500));
        setLayout(new java.awt.BorderLayout());

        optionsPanel.setPreferredSize(new java.awt.Dimension(120, 0));
        add(optionsPanel, java.awt.BorderLayout.LINE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        infoLabel.setText("jLabel1");
        jPanel2.add(infoLabel, java.awt.BorderLayout.PAGE_END);

        fsTree.setName("fsTree"); // NOI18N
        fsTree.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                fsTreeMousePressed(evt);
            }
        });
        fsTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener()
        {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt)
            {
                fsTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(fsTree);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void fsTreeValueChanged(javax.swing.event.TreeSelectionEvent evt)//GEN-FIRST:event_fsTreeValueChanged
    {//GEN-HEADEREND:event_fsTreeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) evt.getPath().getLastPathComponent();
        Object obj = node.getUserObject();

        String text = "";
        optionsPanel.removeAll();

        if (obj instanceof File)
        {
            final File f = (File) obj;
            FileType ft = FileType.typeForFile(f);
            text = ft.toString() + " file, ID: " + f.getId() + ", size: " + f.getFileSize() + " bytes";

            for (final FileAction act : Actions.actions)
                if (act.canDoOn(ft))
                {
                    JButton but = new JButton(act.toString());
                    optionsPanel.add(but);
                    but.addActionListener(new ActionListener()
                    {
                        @Override
                        public void actionPerformed(ActionEvent e)
                        {
                            act.doOn(f);
                        }
                    });
                }
        }
        else if (obj instanceof Directory)
        {
            Directory d = (Directory) obj;
            text = "Directory, ID: " + d.getId();
        }

        optionsPanel.invalidate();
        optionsPanel.repaint();
        infoLabel.setText(text);
    }//GEN-LAST:event_fsTreeValueChanged

    private void fsTreeMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_fsTreeMousePressed
    {//GEN-HEADEREND:event_fsTreeMousePressed
        int selRow = fsTree.getRowForLocation(evt.getX(), evt.getY());
        TreePath selPath = fsTree.getPathForLocation(evt.getX(), evt.getY());
        if (selRow != -1)
            if (evt.getClickCount() == 2)
                doubleClickedNode(((DefaultMutableTreeNode) selPath.getLastPathComponent()).getUserObject());
    }//GEN-LAST:event_fsTreeMousePressed

    private void doubleClickedNode(Object obj)
    {
        if (obj instanceof File)
        {
            final File f = (File) obj;
            FileType ft = FileType.typeForFile(f);
            
            //Do first action
            for (final FileAction act : Actions.actions)
                if (act.canDoOn(ft))
                {
                    act.doOn(f);
                    break;
                }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree fsTree;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel optionsPanel;
    // End of variables declaration//GEN-END:variables
}
