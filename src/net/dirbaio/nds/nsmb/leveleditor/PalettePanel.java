/*
 * Copyright (C) 2013 dirbaio
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.dirbaio.nds.nsmb.leveleditor;

import java.awt.BorderLayout;
import javax.swing.JToggleButton;
import net.dirbaio.nds.nsmb.level.LevelItem;
import net.dirbaio.nds.nsmb.level.NSMBEntrance;
import net.dirbaio.nds.nsmb.level.NSMBObject;
import net.dirbaio.nds.nsmb.level.NSMBPathPoint;
import net.dirbaio.nds.nsmb.level.NSMBSprite;
import net.dirbaio.nds.nsmb.level.NSMBTileset;
import net.dirbaio.nds.nsmb.level.NSMBView;

/**
 *
 * @author dirbaio
 */
public class PalettePanel extends javax.swing.JPanel implements ObjectAndTilesetChangeListener
{

    private final ObjectAndTilesetChooser objChooser;
    private final LevelEditor editor;
    private ObjectType choosenType;
    
    public PalettePanel(LevelEditor editor)
    {
        initComponents();
        this.editor = editor;
        objChooser = new ObjectAndTilesetChooser(editor.level.GFX);
        objChooser.addObjectAndTilesetChangeListener(this);
        setObjectType(ObjectType.Object);
    }
    
    private void updatePlacedObject()
    {
        editor.editorControl.placingItem = getPlacingObject();
    }
    
    public LevelItem getPlacingObject()
    {
        switch(choosenType)
        {
            case Object:
                int obj = objChooser.getSelectedObject();
                int tileset = objChooser.getSelectedTileset();
                NSMBTileset.ObjectDef def = editor.level.GFX.Tilesets[tileset].Objects[obj];
                return new NSMBObject(obj, tileset, 0, 0, def.getWidth(), def.getHeight(), editor.level.GFX);
            case Sprite:
                return new NSMBSprite(editor.level);
            case Entrance:
                return new NSMBEntrance();
            case View:
                return new NSMBView(false);
            case Zone:
                return new NSMBView(true);
            default:
                return null;
        }
    }

    private void setObjectType(ObjectType t)
    {
        JToggleButton[] buttons = new JToggleButton[]
        {
            objectButton,
            spriteButton,
            entranceButton,
            viewButton,
            zoneButton,
            pathButton,
            progressPathButton,
        };
        for (ObjectType tt : ObjectType.values())
            buttons[tt.ordinal()].setSelected(t == tt);

        chooserPanel.removeAll();

        if (t == ObjectType.Object)
            chooserPanel.add(objChooser, BorderLayout.CENTER);

        choosenType = t;
        
        updatePlacedObject();
        
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonsPanel = new javax.swing.JPanel();
        objectButton = new javax.swing.JToggleButton();
        spriteButton = new javax.swing.JToggleButton();
        entranceButton = new javax.swing.JToggleButton();
        viewButton = new javax.swing.JToggleButton();
        zoneButton = new javax.swing.JToggleButton();
        pathButton = new javax.swing.JToggleButton();
        progressPathButton = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chooserPanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(300, 700));
        setLayout(new java.awt.BorderLayout());

        buttonsPanel.setMinimumSize(new java.awt.Dimension(200, 35));
        buttonsPanel.setLayout(new net.dirbaio.nds.nsmb.leveleditor.WrapLayout());

        objectButton.setText("Object");
        objectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objectButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(objectButton);

        spriteButton.setText("Sprite");
        spriteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                spriteButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(spriteButton);

        entranceButton.setText("Entrance");
        entranceButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                entranceButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(entranceButton);

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                viewButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(viewButton);

        zoneButton.setText("Zone");
        zoneButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                zoneButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(zoneButton);

        pathButton.setText("Path");
        pathButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pathButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(pathButton);

        progressPathButton.setText("Progress Path");
        progressPathButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                progressPathButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(progressPathButton);

        add(buttonsPanel, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Use right-click or right-drag to place.");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        chooserPanel.setLayout(new java.awt.BorderLayout());
        jPanel1.add(chooserPanel, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void objectButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objectButtonActionPerformed
    {//GEN-HEADEREND:event_objectButtonActionPerformed
        setObjectType(ObjectType.Object);
    }//GEN-LAST:event_objectButtonActionPerformed

    private void spriteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_spriteButtonActionPerformed
    {//GEN-HEADEREND:event_spriteButtonActionPerformed
        setObjectType(ObjectType.Sprite);
    }//GEN-LAST:event_spriteButtonActionPerformed

    private void entranceButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_entranceButtonActionPerformed
    {//GEN-HEADEREND:event_entranceButtonActionPerformed
        setObjectType(ObjectType.Entrance);
    }//GEN-LAST:event_entranceButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_viewButtonActionPerformed
    {//GEN-HEADEREND:event_viewButtonActionPerformed
        setObjectType(ObjectType.View);
    }//GEN-LAST:event_viewButtonActionPerformed

    private void zoneButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_zoneButtonActionPerformed
    {//GEN-HEADEREND:event_zoneButtonActionPerformed
        setObjectType(ObjectType.Zone);
    }//GEN-LAST:event_zoneButtonActionPerformed

    private void pathButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pathButtonActionPerformed
    {//GEN-HEADEREND:event_pathButtonActionPerformed
        setObjectType(ObjectType.Path);
    }//GEN-LAST:event_pathButtonActionPerformed

    private void progressPathButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_progressPathButtonActionPerformed
    {//GEN-HEADEREND:event_progressPathButtonActionPerformed
        setObjectType(ObjectType.ProgressPath);
    }//GEN-LAST:event_progressPathButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JPanel chooserPanel;
    private javax.swing.JToggleButton entranceButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton objectButton;
    private javax.swing.JToggleButton pathButton;
    private javax.swing.JToggleButton progressPathButton;
    private javax.swing.JToggleButton spriteButton;
    private javax.swing.JToggleButton viewButton;
    private javax.swing.JToggleButton zoneButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void objectAndTilesetChanged(int newObject, int newTileset)
    {
        updatePlacedObject();
    }

    public enum ObjectType
    {

        Object,
        Sprite,
        Entrance,
        View,
        Zone,
        Path,
        ProgressPath
    }
}
